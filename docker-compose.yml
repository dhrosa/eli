services:
  db:
    image: postgres:15
    volumes:
      - ./db_data:/var/lib/postgresql/
    environment:
      POSTGRES_HOST_AUTH_METHOD: trust
      
  django_base:
    build: .
    secrets:
      - django_settings
    environment:
      ENV_PATH: /run/secrets/django_settings
    env_file:
      - .env
    command: "bash -c exit"
    develop:
      watch:
        - action: sync+restart
          path: ./src
          target: /code/src
      
  migrate:
    extends: django_base
    command: "hatch run ./migrate.sh"

  build-frontend:
    build : ./src/frontend
    volumes:
      - jsx-out:/jsx/out
    command: "npm run build"
    develop:
      watch:
        - action: sync+restart
          path: ./src/frontend
          target: /jsx/src
    
  collectstatic:
    extends: django_base
    volumes:
      - static:/static
      - jsx-out:/jsx-out
    depends_on:
      migrate:
        condition: service_completed_successfully
      build-frontend:
        condition: service_completed_successfully
    command: "hatch run ./manage.py collectstatic --no-input"

  django:
    extends: django_base
    depends_on:
      migrate:
        condition: service_completed_successfully
    stop_signal: SIGINT
    command: "hatch run gunicorn --bind 0.0.0.0:3000 eli.wsgi:application"

  nginx:
    build: ./nginx
    ports:
      - 80:8080
      - 443:8443
    depends_on:
      - django
    volumes:
      - static:/static
      - ./ssl:/ssl
        
secrets:
  django_settings:
    file: .env


volumes:
  static:
  jsx-out:
