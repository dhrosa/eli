services:
  django_base:
    build: .
    secrets:
      - django_settings
    environment:
      ENV_PATH: /run/secrets/django_settings
    env_file:
      - .env
    volumes:
      - ./src:/code/src
      - static:/static
    user: "${UID}:${GID}"
    command: "bash -c exit"

  migrate:
    extends: django_base
    depends_on:
      db:
        condition: service_healthy
    command: "hatch run ./manage.py migrate"
    
  collectstatic:
    extends: django_base
    depends_on:
      migrate:
        condition: service_completed_successfully
    command: "hatch run ./manage.py collectstatic --clear --no-input"

  django:
    extends: django_base
    depends_on:
      collectstatic:
        condition: service_completed_successfully
    command: "hatch run ./entrypoint.sh"

  build-frontend:
    build : ./src/frontend
    volumes:
      - ./src/frontend/:/js/src/
      - js-out:/js/out/
    command: "npm run build"
    
  nginx:
    build: ./nginx
    ports:
      - 80:8080
      - 443:8443
    depends_on:
      - django
    volumes:
      - static:/static
      - ./ssl:/ssl

  db:
    image: postgres:15
    volumes:
      - ./db_data:/var/lib/postgresql/
    environment:
      POSTGRES_HOST_AUTH_METHOD: trust
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 1s
      retries: 100
      start_period: 1s
      timeout: 10s

secrets:
  django_settings:
    file: .env


volumes:
  static:
  js-out:
